<?php

namespace Tests\Unit\AutoTest\Util;

use PHPUnit\Framework\TestCase;
use TRF4\UI\Util\Autocomplete\ObjectFactory;
use TRF4\UI\Util\Autocomplete\Single\ArrayOfObjects;
use TRF4\UI\Util\Autocomplete\Single\ArrayOfStrings;
use TRF4\UI\Util\Autocomplete\Single\Map;
use TRF4\UI\Util\Autocomplete\Single\NullObject;

class AutocompleteObjectFactoryTest extends TestCase
{
    /** @var array */
    public $requestData;


    protected function setUp(): void
    {
        $this->requestData = [
            'ac1_value_map' => [
                3 => 'Paraná'
            ],
            'ac2_value' => [
                1 => [
                    'code' => 1,
                    'name' => 'RS'
                ]

            ],
            'ac3_value' => [
                'SC' => ''
            ]
        ];

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @dataProvider dpTest
     */
    public function test($namePrefix, $expectedClass)
    {
        $actual = ObjectFactory::create($namePrefix, $this->requestData);
        $this->assertInstanceOf($expectedClass, $actual);
    }

    public function dpTest()
    {
        return [
            ['ac1', Map::class],
            ['ac2', ArrayOfObjects::class],
            ['ac3', ArrayOfStrings::class],
            ['ac4', NullObject::class]
        ];
    }

    /**
     * @dataProvider dpTestValue
     */
    public function testGetValue($namePrefix, $expectedValue)
    {
        $acObject = ObjectFactory::create($namePrefix, $this->requestData);
        $this->assertEquals($expectedValue, $acObject->value());
    }

    public function dpTestValue()
    {
        return [
            ['ac1', 3],
            ['ac2', 1],
            ['ac3', 'SC'],
            ['ac4', null]
        ];
    }

    /**
     * @dataProvider dpTestObjects
     */
    public function testGetObjects($namePrefix, $expectedValue)
    {
        $acObject = ObjectFactory::create($namePrefix, $this->requestData);
        $this->assertEquals($expectedValue, $acObject->object());
    }

    public function dpTestObjects()
    {
        return [
            [
                'ac1', [
                3 => 'Paraná'
            ]
            ], [
                'ac2',
                [
                    [
                        'code' => 1,
                        'name' => 'RS'
                    ]
                ]
            ], [
                'ac3', ['SC']
            ],
            [
                'ac4', []
            ]
        ];
    }

}
